version: "3.8"

services:
  postgres:
    image: postgres:15-alpine
    container_name: soc_postgres
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app_password
      POSTGRES_DB: app_db
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C --lc-messages=C"
      LANG: C.UTF-8
      LC_ALL: C.UTF-8
      LC_MESSAGES: C
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app -d app_db"]
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 5s

  redis:
    image: redis:7-alpine
    container_name: soc_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: ["redis-server", "--save", "60", "1", "--loglevel", "warning"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 5s

  app:
    build: .
    image: soc_agent_lite:latest
    container_name: soc_app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      # Async SQLAlchemy DSN
      DATABASE_URL: postgresql+asyncpg://app:app_password@postgres:5432/app_db
      # Provide both REDIS_URL and discrete vars for compatibility
      REDIS_URL: redis://redis:6379/0
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_DB: 0
      WEBHOOK_SECRET: change-me-please
    ports:
      - "8000:8000"

volumes:
  postgres_data:
  redis_data:
